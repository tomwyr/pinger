default_platform(:ios)

platform :ios do
    lane :sign_and_build_app do
        appId = ENV["APP_ID"]
        profileType = ENV["PROFILE_TYPE"]

        create_keychain(
            name: ENV["KEYCHAIN_NAME"],
            password: ENV["KEYCHAIN_PASSWORD"],
            timeout: false,
            unlock: true,
        )

        match(
            git_url: ENV["GIT_URL"],
            git_basic_authorization: ENV["GIT_BASIC_AUTHORIZATION"],
            keychain_name: ENV["KEYCHAIN_NAME"],
            keychain_password: ENV["KEYCHAIN_PASSWORD"],
            type: profileType,
            app_identifier: appId,
            readonly: true,
        )
        
        update_project_provisioning(
            xcodeproj: "Runner.xcodeproj",
            target_filter: "Runner",
            build_configuration: "Release",
            profile: ENV["sigh_#{appId}_#{profileType}_profile-path"],
            code_signing_identity: ENV["IOS_SIGNING_IDENTITY"],
        )

        update_code_signing_settings(
            use_automatic_signing: false,
            path: "Runner.xcodeproj",
        )

        build_app(
            workspace: "Runner.xcworkspace",
            scheme: ENV["APP_FLAVOR"],
            export_method: ENV["EXPORT_METHOD"],
            output_name: "Runner.ipa",
            export_options: {
                provisioningProfiles: {
                    appId => ENV["sigh_#{appId}_#{profileType}_profile-name"]
                }
            },
        )
    end

    lane :publish_firebase do
        firebase_app_distribution(
            app: ENV["FIREBASE_APP_ID"],
            groups: ENV["FIREBASE_GROUPS"],
            firebase_cli_token: ENV["FIREBASE_TOKEN"],
        )
    end

    lane :publish_app_store do
        upload_to_app_store(
            force: true,
            skip_metadata: true,
            skip_screenshots: true,
            metadata_path: nil,
        )
    end
end
